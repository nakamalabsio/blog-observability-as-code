name: "Terraform OaC"

defaults:
  run:
    working-directory: deployment

env:
  DD_API_KEY: ${{ vars.TF_VAR_DATADOG_API_KEY }}
  DD_APP_KEY: ${{ vars.TF_VAR_DATADOG_APP_KEY }}
  DD_HOST: ${{ vars.TF_VAR_DATADOG_API_URL }}

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    # Inputs the workflow expects.
    inputs:
      apply:
        description: 'TF File Path'     
        required: true
        default: 'aws_samples/create_ec2'

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # terraform_version: 1.4.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: echo ${{ vars.TF_VAR_DATADOG_API_KEY }} && terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
